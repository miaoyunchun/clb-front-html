{
  "version": 3,
  "sources": [
    "role_delete_modal_ctrl.es6"
  ],
  "names": [],
  "mappings": ";;;;IAAM,sB,GACF,gCAAY,MAAZ,EAAoB,cAApB,EAAoC,OAApC,EAA6C,QAA7C,EAAuD,KAAvD,EAA8D,cAA9D,EAA8E,gBAA9E,EAAgG;AAAA;;AAE5F;AACA,WAAO,YAAP,GAAsB,iBAAiB,IAAjB,CAAsB,mBAAtB,EAAtB;;AAEA,WAAO,MAAP,GAAgB;AACZ,gBAAiB,SADL;AAEZ,kBAAiB,SAFL;AAGZ,yBAAiB,SAHL;AAIZ,gBAAiB,SAJL;AAKZ,kBAAiB,SALL;AAMZ,wBAAiB,eAAe,OAAf,CAAuB,MAAvB;AANL,KAAhB;;AASA,WAAO,MAAP,GAAgB;AACZ;AADY,KAAhB;;AAIA,WAAO,cAAP,GAAwB,KAAxB;;AAEA;AACA,aAAS,kBAAT,GAA8B;AAC1B,eAAO,MAAP,CAAc,IAAd,CAAmB;AACf,kBAAM,SADS;AAEf,iBAAM,QAAQ,WAAR,EAAqB,uEAArB;AAFS,SAAnB;AAIH;;AAED;AACA,aAAS,eAAT,CAAyB,OAAzB,EAAkC;AAC9B,eAAO,MAAP,CAAc,IAAd,CAAmB;AACf,kBAAM,QADS;AAEf,iBAAM;AAFS,SAAnB;AAIH;;AAED;AACA,aAAS,UAAT,CAAoB,KAApB,EAA2B;AACvB,eAAO,MAAP,CAAc,MAAd,CAAqB,KAArB,EAA4B,CAA5B;AACH;;AAED;;;;;;;;;AASA,aAAS,SAAT,GAAqB;AACjB,YAAI,mBAAmB,iBAAiB,MAAjB,CAAwB,mBAAxB,EAAvB;;AAEA,eAAO,MAAP,CAAc,MAAd,GAAuB,iBAAiB,MAAxC;AACA,eAAO,MAAP,CAAc,QAAd,GAAyB,iBAAiB,QAA1C;AACA,eAAO,MAAP,CAAc,eAAd,GAAgC,iBAAiB,eAAjD;AACA,eAAO,MAAP,CAAc,MAAd,GAAuB,iBAAiB,gBAAxC;AACA,eAAO,MAAP,CAAc,QAAd,GAAyB,iBAAiB,OAA1C;AACH;;AAED;;;AAGA,WAAO,MAAP,GAAgB,YAAM;AAClB;AACA,eAAO,MAAP,GAAgB,EAAhB;;AAEA,cAAM;AACF,oBAAQ,MADN;AAEF,iBAAQ,qBAAqB,qBAF3B;AAGF,oBAAQ;AACJ,0BAAiC,OAAO,MAAP,CAAc,MAD3C;AAEJ,iDAAiC,OAAO,MAAP,CAAc;AAF3C;AAHN,SAAN,EAOG,IAPH,CAOQ,UAAC,QAAD,EAAc;AAClB,gBAAI,eAAe,SAAS,IAA5B;;AAEA,gBAAI,aAAa,IAAb,KAAsB,QAA1B,EAAoC;AAChC,gCAAgB,aAAa,OAA7B;;AAEA,yBAAS,YAAY;AACjB,+BAAW,CAAX;AACH,iBAFD,EAEG,IAFH;AAGH,aAND,MAMO;AACH;AACA;AACA;AACA,uBAAO,cAAP,GAAwB,IAAxB;AACA;AACA,+BAAe,eAAf,CAA+B,QAAQ,OAAR,CAAgB,WAAhB,CAA/B;AACA;AACA,yBAAS,YAAY;AACjB,mCAAe,OAAf,CAAuB,QAAvB;AACH,iBAFD,EAEG,IAFH;AAGH;AAEJ,SA7BD,EA6BG,YAAM;AACL,yBAAa,gBAAb,CAA8B,QAAQ,WAAR,EAAqB,kEAArB,CAA9B;AACH,SA/BD;AAgCH,KApCD;;AAsCA;AACA,WAAO,MAAP,GAAgB,YAAM;AAClB,uBAAe,OAAf,CAAuB,QAAvB;AACH,KAFD;;AAIA,YAAQ,OAAR,CAAgB,YAAM;AAClB;AACH,KAFD;AAGH,C;;IAGC,2B,GACF,qCAAY,MAAZ,EAAoB,MAApB,EAA4B,OAA5B,EAAqC,YAArC,EAAmD,gBAAnD,EAAqE;AAAA;;AACjE,WAAO,mBAAP,GAA6B,YAAM;;AAE/B,YAAI,QAAQ,QAAQ,OAAR,CAAgB,WAAhB,EAA6B,SAA7B,EAAZ;;AAEA,YAAI,MAAM,GAAN,CAAU,SAAV,EAAqB,MAArB,KAAgC,CAApC,EAAuC;AACnC,6BAAiB,MAAjB,CAAwB,mBAAxB,CAA4C,MAAM,GAAN,CAAU,SAAV,EAAqB,IAArB,EAA5C;;AAEA,mBAAO,IAAP,CAAY;AACR,0BAAa,QADL;AAER,6BAAa,sBAFL;AAGR,4BAAa,wBAHL;AAIR,sBAAa;AAJL,aAAZ;AAMH,SATD,MASO;AACH,yBAAa,gBAAb,CAA8B,QAAQ,WAAR,EAAqB,8DAArB,CAA9B;AACH;AACJ,KAhBD;AAiBH,C;;AAGL,IAAI,UAAJ,CAAe,6BAAf,EAA8C,2BAA9C;AACA,IAAI,UAAJ,CAAe,wBAAf,EAAyC,sBAAzC",
  "file": "role_delete_modal_ctrl.js",
  "sourcesContent": [
    "class RoleDeleteModalControl {\r\n    constructor($scope, $modalInstance, $filter, $timeout, $http, dataTableUtils, shareDataService) {\r\n\r\n        // Initialize data and placeholders\r\n        $scope.placeholders = shareDataService.role.getRolePlaceholders();\r\n\r\n        $scope.fields = {\r\n            roleId         : undefined,\r\n            roleName       : undefined,\r\n            roleDescription: undefined,\r\n            status         : undefined,\r\n            position       : undefined,\r\n            roleOperatorId : sessionStorage.getItem('userId')\r\n        };\r\n\r\n        $scope.alerts = [\r\n            // { type: 'danger', msg: '' }\r\n        ];\r\n\r\n        $scope.isFormDisabled = false;\r\n\r\n        // Alert when operation is successful\r\n        function deleteSuccessAlert() {\r\n            $scope.alerts.push({\r\n                type: 'success',\r\n                msg : $filter('translate')('pages.sm.role.ROLE_MGMT_ALERTS.ROLE_MGMT_ALERT_ROLE_DELETE_SUCCESSFUL')\r\n            });\r\n        }\r\n\r\n        // Alert when operation failed\r\n        function deleteFailAlert(message) {\r\n            $scope.alerts.push({\r\n                type: 'danger',\r\n                msg : message\r\n            });\r\n        }\r\n\r\n        // Close the alert\r\n        function closeAlert(index) {\r\n            $scope.alerts.splice(index, 1);\r\n        }\r\n\r\n        /**\r\n         * Fill in fields from the selected row in the table\r\n         * @property selectedRowItems The selected row in the table\r\n         * @property selectedRowItems.roleId The ID of the selected role\r\n         * @property selectedRowItems.roleName The name of the selected role\r\n         * @property selectedRowItems.roleDescription The description of the selected role\r\n         * @property selectedRowItems.roleActiveStatus The status of the selected role\r\n         * @property selectedRowItems.posName The name of the associated position of the selected role\r\n         */\r\n        function setFields() {\r\n            let selectedRowItems = shareDataService.common.getSelectedRowItems();\r\n\r\n            $scope.fields.roleId = selectedRowItems.roleId;\r\n            $scope.fields.roleName = selectedRowItems.roleName;\r\n            $scope.fields.roleDescription = selectedRowItems.roleDescription;\r\n            $scope.fields.status = selectedRowItems.roleActiveStatus;\r\n            $scope.fields.position = selectedRowItems.posName;\r\n        }\r\n\r\n        /**\r\n         * Edit role\r\n         */\r\n        $scope.delete = () => {\r\n            // Clear alerts\r\n            $scope.alerts = [];\r\n\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'role/deleteRoleInfo',\r\n                params: {\r\n                    'roleId'                       : $scope.fields.roleId,\r\n                    'roleRequiredVo.roleOperatorId': $scope.fields.roleOperatorId\r\n                }\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'failed') {\r\n                    deleteFailAlert(responseData.message);\r\n\r\n                    $timeout(function () {\r\n                        closeAlert(0);\r\n                    }, 5000);\r\n                } else {\r\n                    // Display an alert\r\n                    deleteSuccessAlert();\r\n                    // Disable the form\r\n                    $scope.isFormDisabled = true;\r\n                    // Refresh the data table\r\n                    dataTableUtils.reloadDataTable(angular.element('#tblRoles'));\r\n                    // Close the modal 5 seconds later\r\n                    $timeout(function () {\r\n                        $modalInstance.dismiss('cancel');\r\n                    }, 2000);\r\n                }\r\n\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        };\r\n\r\n        // Close modal\r\n        $scope.cancel = () => {\r\n            $modalInstance.dismiss('cancel');\r\n        };\r\n\r\n        angular.element(() => {\r\n            setFields();\r\n        });\r\n    }\r\n}\r\n\r\nclass DeleteRoleModalInstanceCtrl {\r\n    constructor($scope, $modal, $filter, toasterUtils, shareDataService) {\r\n        $scope.showDeleteRolePopup = () => {\r\n\r\n            let table = angular.element('#tblRoles').DataTable();\r\n\r\n            if (table.row('.active').length === 1) {\r\n                shareDataService.common.setSelectedRowItems(table.row('.active').data());\r\n\r\n                $modal.open({\r\n                    backdrop   : 'static',\r\n                    templateUrl: 'deleteRoleModal.html',\r\n                    controller : 'RoleDeleteModalControl',\r\n                    size       : 'lg'\r\n                });\r\n            } else {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_SELECT_ROW'));\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\napp.controller('DeleteRoleModalInstanceCtrl', DeleteRoleModalInstanceCtrl);\r\napp.controller('RoleDeleteModalControl', RoleDeleteModalControl);"
  ]
}