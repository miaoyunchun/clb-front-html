{
  "version": 3,
  "sources": [
    "role_add_modal_ctrl.es6"
  ],
  "names": [],
  "mappings": "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",
  "file": "role_add_modal_ctrl.js",
  "sourcesContent": [
    "class RoleAddModalControl {\r\n    constructor($scope, $modalInstance, $filter, $timeout, $http, shareDataService) {\r\n\r\n        // Initialize data and placeholders\r\n        $scope.placeholders = shareDataService.role.getRolePlaceholders();\r\n\r\n        $scope.statuses = undefined;\r\n        $scope.positions = undefined;\r\n\r\n        $scope.selectedStatus = {};\r\n        $scope.selectedPos = {};\r\n\r\n        $scope.fields = {\r\n            roleName       : undefined,\r\n            roleDescription: undefined,\r\n            roleActive     : undefined,\r\n            posId          : undefined,\r\n            roleOperatorId : sessionStorage.getItem('userId')\r\n        };\r\n\r\n        $scope.alerts = [\r\n            // { type: 'danger', msg: '' }\r\n        ];\r\n\r\n        $scope.isFormDisabled = false;\r\n\r\n        // Alert when operation is successful\r\n        function addSuccessAlert() {\r\n            $scope.alerts.push({\r\n                type: 'success',\r\n                msg : $filter('translate')('pages.sm.role.ROLE_MGMT_ALERTS.ROLE_MGMT_ALERT_ROLE_ADD_SUCCESSFUL')\r\n            });\r\n        }\r\n\r\n        // Alert when operation failed\r\n        function addFailAlert(message) {\r\n            $scope.alerts.push({\r\n                type: 'danger',\r\n                msg : message\r\n            });\r\n        }\r\n\r\n        // Close the alert\r\n        function closeAlert(index) {\r\n            $scope.alerts.splice(index, 1);\r\n        }\r\n\r\n        /**\r\n         * Fetch statuses and its ID\r\n         */\r\n        function fetchStatuses() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryActive'\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.statuses = responseData.active;\r\n\r\n                    if (responseData.active.length === 1) {\r\n                        $scope.selectedStatus.value = responseData.active[0].value;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        function fetchPosWithNoRole() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryPosNameWithNoRole'\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.positions = responseData.posInfo;\r\n\r\n                    if (responseData.posInfo.length === 1) {\r\n                        $scope.selectedPos.posId = responseData.posInfo[0].value;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        function performInitAjaxes() {\r\n            fetchStatuses();\r\n            fetchPosWithNoRole();\r\n        }\r\n\r\n        $scope.statusSelectOnChange = () => {\r\n            $scope.fields.roleActive = $scope.selectedStatus.value;\r\n        };\r\n\r\n        $scope.posIdSelectOnChange = () => {\r\n            $scope.fields.posId = $scope.selectedPos.id;\r\n        };\r\n\r\n        /**\r\n         * Add new role\r\n         */\r\n        $scope.add = () => {\r\n            // Clear alerts\r\n            $scope.alerts = [];\r\n\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'role/addNewRoleInfo',\r\n                params: {\r\n                    'roleRequiredVo.roleName'       : $scope.fields.roleName,\r\n                    'roleRequiredVo.roleDescription': $scope.fields.roleDescription,\r\n                    'roleRequiredVo.roleActive'     : $scope.fields.roleActive,\r\n                    'roleRequiredVo.posId'          : $scope.fields.posId,\r\n                    'roleRequiredVo.roleOperatorId' : $scope.fields.roleOperatorId\r\n                }\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'failed') {\r\n                    addFailAlert(responseData.message);\r\n\r\n                    $timeout(function () {\r\n                        closeAlert(0);\r\n                    }, 5000);\r\n                } else {\r\n                    // Display an alert\r\n                    addSuccessAlert();\r\n                    // Disable the form\r\n                    $scope.isFormDisabled = true;\r\n                    // Refresh the data table\r\n                    angular.element('#tblRoles').DataTable().ajax.reload(null, false);\r\n                    // Close the modal 5 seconds later\r\n                    $timeout(function () {\r\n                        $modalInstance.dismiss('cancel');\r\n                    }, 2000);\r\n                }\r\n\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        };\r\n\r\n        // Close modal\r\n        $scope.cancel = () => {\r\n            $modalInstance.dismiss('cancel');\r\n        };\r\n\r\n        angular.element(() => {\r\n            performInitAjaxes();\r\n        });\r\n    }\r\n}\r\n\r\nclass AddRoleModalInstanceCtrl {\r\n    constructor($scope, $modal) {\r\n        $scope.showAddRolePopup = function () {\r\n\r\n            $modal.open({\r\n                backdrop   : 'static',\r\n                templateUrl: 'addRoleModal.html',\r\n                controller : 'RoleAddModalControl',\r\n                size       : 'lg'\r\n            });\r\n\r\n        };\r\n    }\r\n}\r\n\r\napp.controller('AddRoleModalInstanceCtrl', AddRoleModalInstanceCtrl);\r\napp.controller('RoleAddModalControl', RoleAddModalControl);"
  ]
}