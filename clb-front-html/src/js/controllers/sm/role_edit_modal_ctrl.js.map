{
  "version": 3,
  "sources": [
    "role_edit_modal_ctrl.es6"
  ],
  "names": [],
  "mappings": "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",
  "file": "role_edit_modal_ctrl.js",
  "sourcesContent": [
    "class RoleEditModalControl {\r\n    constructor($scope, $modalInstance, $filter, $timeout, $http, toasterUtils, dataTableUtils, shareDataService) {\r\n\r\n        // Initialize data and placeholders\r\n        $scope.placeholders = shareDataService.role.getRolePlaceholders();\r\n\r\n        $scope.statuses = undefined;\r\n        $scope.positions = undefined;\r\n\r\n        $scope.selectedStatus = {};\r\n        $scope.selectedPos = {};\r\n\r\n        $scope.fields = {\r\n            roleId         : undefined,\r\n            roleName       : undefined,\r\n            roleDescription: undefined,\r\n            roleActive     : undefined,\r\n            posId          : undefined,\r\n            roleOperatorId : sessionStorage.getItem('userId')\r\n        };\r\n\r\n        $scope.alerts = [\r\n            // { type: 'danger', msg: '' }\r\n        ];\r\n\r\n        $scope.isFormDisabled = false;\r\n\r\n        // Alert when operation is successful\r\n        function editSuccessAlert() {\r\n            $scope.alerts.push({\r\n                type: 'success',\r\n                msg : $filter('translate')('pages.sm.role.ROLE_MGMT_ALERTS.ROLE_MGMT_ALERT_ROLE_EDIT_SUCCESSFUL')\r\n            });\r\n        }\r\n\r\n        // Alert when operation failed\r\n        function editFailAlert(message) {\r\n            $scope.alerts.push({\r\n                type: 'danger',\r\n                msg : message\r\n            });\r\n        }\r\n\r\n        // Close the alert\r\n        function closeAlert(index) {\r\n            $scope.alerts.splice(index, 1);\r\n        }\r\n\r\n        /**\r\n         * Fetch statuses and its ID\r\n         */\r\n        function fetchStatuses() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryActive'\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.statuses = responseData.active;\r\n\r\n                    if (responseData.active.length === 1) {\r\n                        $scope.selectedStatus.value = responseData.active[0].value;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        function fetchPosWithNoRole() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryPosNameWithNoRole',\r\n                params: {\r\n                    'roleId': $scope.fields.roleId\r\n                }\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.positions = responseData.posInfo;\r\n\r\n                    if (responseData.posInfo.length === 1) {\r\n                        $scope.selectedPos.posId = responseData.posInfo[0].value;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        function performInitAjaxes() {\r\n            fetchStatuses();\r\n            fetchPosWithNoRole();\r\n        }\r\n\r\n        $scope.statusSelectOnChange = () => {\r\n            $scope.fields.roleActive = $scope.selectedStatus.value;\r\n        };\r\n\r\n        $scope.posIdSelectOnChange = () => {\r\n            $scope.fields.posId = $scope.selectedPos.id;\r\n        };\r\n\r\n        /**\r\n         * Edit role\r\n         */\r\n        $scope.edit = (formEditRole) => {\r\n            // Clear alerts\r\n            $scope.alerts = [];\r\n\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'role/editRoleInfo',\r\n                params: {\r\n                    'roleId'                        : $scope.fields.roleId,\r\n                    'isEdited'                      : formEditRole.$dirty,\r\n                    'roleRequiredVo.roleName'       : $scope.fields.roleName,\r\n                    'roleRequiredVo.roleDescription': $scope.fields.roleDescription,\r\n                    'roleRequiredVo.roleActive'     : $scope.fields.roleActive,\r\n                    'roleRequiredVo.posId'          : $scope.fields.posId,\r\n                    'roleRequiredVo.roleOperatorId' : $scope.fields.roleOperatorId\r\n                }\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'failed') {\r\n                    editFailAlert(responseData.message);\r\n\r\n                    $timeout(function () {\r\n                        closeAlert(0);\r\n                    }, 5000);\r\n                } else {\r\n                    // Display an alert\r\n                    editSuccessAlert();\r\n                    // Disable the form\r\n                    $scope.isFormDisabled = true;\r\n                    // Refresh the data table\r\n                    dataTableUtils.reloadDataTable(angular.element('#tblRoles'));\r\n                    // Close the modal 5 seconds later\r\n                    $timeout(function () {\r\n                        $modalInstance.dismiss('cancel');\r\n                    }, 2000);\r\n                }\r\n\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        };\r\n\r\n        // Close modal\r\n        $scope.cancel = () => {\r\n            $modalInstance.dismiss('cancel');\r\n        };\r\n\r\n        angular.element(() => {\r\n            let selectedRowItems = shareDataService.common.getSelectedRowItems();\r\n\r\n            $scope.fields.roleId = selectedRowItems.roleId;\r\n            $scope.fields.roleName = selectedRowItems.roleName;\r\n            $scope.fields.roleDescription = selectedRowItems.roleDescription;\r\n            $scope.fields.roleActive = selectedRowItems.roleActive;\r\n            $scope.fields.posId = selectedRowItems.posId;\r\n\r\n            $scope.selectedPos.id = $scope.fields.posId;\r\n            $scope.selectedStatus.value = String($scope.fields.roleActive);\r\n\r\n            performInitAjaxes();\r\n        });\r\n    }\r\n}\r\n\r\nclass EditRoleModalInstanceCtrl {\r\n    constructor($scope, $modal, $filter, toasterUtils, shareDataService) {\r\n        $scope.showEditRolePopup = () => {\r\n\r\n            let table = angular.element('#tblRoles').DataTable();\r\n\r\n            if (table.row('.active').length === 1) {\r\n                shareDataService.common.setSelectedRowItems(table.row('.active').data());\r\n\r\n                $modal.open({\r\n                    backdrop   : 'static',\r\n                    templateUrl: 'editRoleModal.html',\r\n                    controller : 'RoleEditModalControl',\r\n                    size       : 'lg'\r\n                });\r\n            } else {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_SELECT_ROW'));\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\napp.controller('EditRoleModalInstanceCtrl', EditRoleModalInstanceCtrl);\r\napp.controller('RoleEditModalControl', RoleEditModalControl);"
  ]
}