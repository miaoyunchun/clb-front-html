{
  "version": 3,
  "sources": [
    "service_mgt_ctrl.es6"
  ],
  "names": [],
  "mappings": "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",
  "file": "service_mgt_ctrl.js",
  "sourcesContent": [
    "class SvcMgtControl {\r\n    constructor($scope, $http, $filter, $interval, $window, shareDataService, dataTableUtils, toasterUtils, dateTimeUtils) {\r\n\r\n        $scope.organizations = undefined;\r\n        $scope.systems = undefined;\r\n        $scope.modules = undefined;\r\n        $scope.aliases = undefined;\r\n        $scope.functions = undefined;\r\n        $scope.users = undefined;\r\n\r\n        $scope.selectedOrganization = {};\r\n        $scope.selectedSystem = {};\r\n        $scope.selectedModule = {};\r\n        $scope.selectedAlias = {};\r\n        $scope.selectedFunction = {};\r\n        $scope.selectedUser = {};\r\n\r\n        $scope.dates = {\r\n            laterThan  : undefined,\r\n            earlierThan: undefined\r\n        };\r\n\r\n        $scope.fields = {\r\n            svcSysName     : undefined,\r\n            svcModuleName  : undefined,\r\n            svcSysAlias    : undefined,\r\n            svcFunctionName: undefined,\r\n            svcUpdateUserId: undefined,\r\n            availTime      : undefined,\r\n            expireTime     : undefined,\r\n            orgId          : undefined\r\n        };\r\n\r\n        const COLUMN_NAMES = {\r\n            SEQ              : 0,\r\n            SERVICE_ID       : 1,\r\n            SERVICE_NAME     : 2,\r\n            SYS_NAME         : 3,\r\n            MODULE_NAME      : 4,\r\n            ALIAS_NAME       : 5,\r\n            FUNCTION_NAME    : 6,\r\n            DESCRIPTION_ZH_CN: 7,\r\n            DESCRIPTION_EN   : 8,\r\n            ORG_ID           : 9,\r\n            ORG_NAME         : 10,\r\n            UPDATE_USER_ID   : 11,\r\n            UPDATE_USER      : 12,\r\n            UPDATE_DATE      : 13\r\n        };\r\n\r\n        // Initialization parameters for DataTable\r\n        $scope.dataTableParms = {\r\n            searching : false, // Disable built-in searching\r\n            serverSide: true, // Enables the server-side processing\r\n            processing: true, // Enables the \"Processing...\" indicator\r\n            autoWidth : false, // Disable column width auto determining\r\n            pagingType: 'full_numbers',　// Paging buttons contains \"First\", \"Last\", \"Previous\", \"Next\", and numbers\r\n            language  : {\r\n                // I18n options, see https://datatables.net/reference/option/ for details\r\n                paginate    : {\r\n                    previous: $filter('translate')('pages.common.COMMON_BUTTONS.COMMON_BUTTON_PREV_PAGE'),\r\n                    next    : $filter('translate')('pages.common.COMMON_BUTTONS.COMMON_BUTTON_NEXT_PAGE'),\r\n                    first   : $filter('translate')('pages.common.COMMON_BUTTONS.COMMON_BUTTON_FIRST_PAGE'),\r\n                    last    : $filter('translate')('pages.common.COMMON_BUTTONS.COMMON_BUTTON_LAST_PAGE')\r\n                },\r\n                emptyTable  : $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_EMPTY_TABLE'),\r\n                info        : $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_PAGE_INFO'),\r\n                infoFiltered: $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_PAGE_INFO_FILTERED'),\r\n                infoEmpty   : $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_PAGE_EMPTY'),\r\n                lengthMenu  : $filter('translate')('pages.common.COMMON_FIELDS.COMMON_FIELD_LENGTH_MENU'),\r\n                processing  : $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_PROCESSING')\r\n            },\r\n            ajax      : {\r\n                url    : CLB_FRONT_BASE_URL + 'svc/querySvcInfoWithFilter',\r\n                data   : $scope.fields,\r\n                dataSrc: 'data',\r\n                type   : 'POST'\r\n            },\r\n            columns   : [\r\n                // Specify which property to pick for the corresponding column\r\n                {data: 'seq', visible: true, orderable: false},\r\n                {data: 'svcId', visible: false},\r\n                {data: 'svcName', visible: true},\r\n                {data: 'svcSysName', visible: false},\r\n                {data: 'svcModuleName', visible: false},\r\n                {data: 'svcSysAlias', visible: false},\r\n                {data: 'svcFunctionName', visible: false},\r\n                {data: 'svcDescriptionZhCn', visible: true},\r\n                {data: 'svcDescriptionEn', visible: true},\r\n                {data: 'orgId', visible: false},\r\n                {data: 'orgName', visible: true},\r\n                {data: 'svcUpdateUserId', visible: false},\r\n                {data: 'svcUpdateUserName', visible: true},\r\n                {data: 'svcUpdateTime', visible: true}\r\n            ],\r\n            order     : [[COLUMN_NAMES.SERVICE_NAME, 'asc']]\r\n        };\r\n\r\n        /**\r\n         * Generates the child row for the selected row\r\n         * @param data Data of the selected row\r\n         * @returns {string} The HTML of the child row\r\n         */\r\n        function formatChildRow(data) {\r\n            return '<div class=\"col-lg-6 form-group\">'\r\n                + '<h5>' + $filter('translate')('pages.sm.service.SERVICE_MGMT_COLUMN_TITLES.SERVICE_MGMT_COLUMN_TITLE_DESCRIPTION_ZH_CN') + '</h5>'\r\n                + '<div id=\"descZhCn\" class=\"well b bg-light lter wrapper-sm\">'\r\n                + data.svcDescriptionZhCn\r\n                + '</div>'\r\n                + '</div>'\r\n                + '<div class=\"col-lg-6 form-group\">'\r\n                + '<h5>' + $filter('translate')('pages.sm.service.SERVICE_MGMT_COLUMN_TITLES.SERVICE_MGMT_COLUMN_TITLE_DESCRIPTION_EN') + '</h5>'\r\n                + '<div id=\"descEn\" class=\"well b bg-light lter wrapper-sm\">'\r\n                + data.svcDescriptionEn\r\n                + '</div>'\r\n                + '</div>';\r\n        }\r\n\r\n        /**\r\n         * Fetch organizations with position ID and department ID\r\n         */\r\n        function fetchOrganizations() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryOrganizationName'\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.organizations = responseData.organizationInfo;\r\n\r\n                    if (responseData.organizationInfo.length === 1) {\r\n                        $scope.selectedOrg.id = responseData.organizationInfo[0].orgId;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        function fetchUsers() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryAllUser'\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.users = responseData.userInfo;\r\n\r\n                    if (responseData.userInfo.length === 1) {\r\n                        $scope.selectedUser.id = responseData.userInfo[0].userId;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        function fetchSystemNames() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/querySvcSystemName'\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.systems = responseData.svcSysName;\r\n\r\n                    if (responseData.svcSysName.length === 1) {\r\n                        $scope.selectedSystem.svcSysName = responseData.svcSysName[0].svcSysName;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        function fetchModuleNames() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/querySvcModuleName'\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.modules = responseData.svcModuleName;\r\n\r\n                    if (responseData.svcModuleName.length === 1) {\r\n                        $scope.selectedModule.svcModuleName = responseData.svcModuleName[0].svcModuleName;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        function fetchAliases() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/querySvcSysAlias'\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.aliases = responseData.svcSysAlias;\r\n\r\n                    if (responseData.svcSysAlias.length === 1) {\r\n                        $scope.selectedAlias.svcSysAlias = responseData.svcSysAlias[0].svcSysAlias;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        function fetchFunctionNames() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/querySvcFunctionName'\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.functions = responseData.svcFunctionName;\r\n\r\n                    if (responseData.svcFunctionName.length === 1) {\r\n                        $scope.selectedFunction.svcFunctionName = responseData.svcFunctionName[0].svcFunctionName;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Perform initialization AJAXes\r\n         */\r\n        function performInitAjaxes() {\r\n            fetchOrganizations();\r\n            fetchUsers();\r\n            fetchSystemNames();\r\n            fetchModuleNames();\r\n            fetchAliases();\r\n            fetchFunctionNames();\r\n        }\r\n\r\n        $scope.earlierThanOnChange = () => {\r\n            $scope.fields.availTime = dateTimeUtils.getYyyyMmDd($scope.dates.earlierThan);\r\n        };\r\n\r\n        $scope.laterThanOnChange = () => {\r\n            $scope.fields.expireTime = dateTimeUtils.getYyyyMmDd($scope.dates.laterThan);\r\n        };\r\n\r\n        $scope.orgIdSelectOnChange = () => {\r\n            $scope.fields.orgId = $scope.selectedOrganization.id;\r\n        };\r\n\r\n        $scope.userIdSelectOnChange = () => {\r\n            $scope.fields.svcUpdateUserId = $scope.selectedUser.id;\r\n        };\r\n\r\n        $scope.systemSelectOnChange = () => {\r\n            $scope.fields.svcSysName = $scope.selectedSystem.svcSysName;\r\n        };\r\n\r\n        $scope.moduleSelectOnChange = () => {\r\n            $scope.fields.svcModuleName = $scope.selectedModule.svcModuleName;\r\n        };\r\n\r\n        $scope.aliasSelectOnChange = () => {\r\n            $scope.fields.svcSysAlias = $scope.selectedAlias.svcSysAlias;\r\n        };\r\n\r\n        $scope.functionSelectOnChange = () => {\r\n            $scope.fields.svcFunctionName = $scope.selectedFunction.svcFunctionName;\r\n        };\r\n\r\n        $scope.clearOrganizationSelect = () => {\r\n            $scope.selectedOrganization.id = undefined;\r\n            $scope.fields.orgId = undefined;\r\n        };\r\n\r\n        $scope.clearUserIdSelect = () => {\r\n            $scope.selectedUser.id = undefined;\r\n            $scope.fields.svcUpdateUserId = undefined;\r\n        };\r\n\r\n        $scope.clearSystemSelect = () => {\r\n            $scope.selectedSystem.svcSysName = undefined;\r\n            $scope.fields.svcSysName = undefined;\r\n        };\r\n\r\n        $scope.clearModuleSelect = () => {\r\n            $scope.selectedModule.svcModuleName = undefined;\r\n            $scope.fields.svcModuleName = undefined;\r\n        };\r\n\r\n        $scope.clearAliasSelect = () => {\r\n            $scope.selectedAlias.svcSysAlias = undefined;\r\n            $scope.fields.svcSysAlias = undefined;\r\n        };\r\n\r\n        $scope.clearFunctionSelect = () => {\r\n            $scope.selectedFunction.svcFunctionName = undefined;\r\n            $scope.fields.svcFunctionName = undefined;\r\n        };\r\n\r\n        $scope.clearSelect = () => {\r\n            $scope.fields.availTime = undefined;\r\n            $scope.fields.expireTime = undefined;\r\n\r\n            $scope.clearOrganizationSelect();\r\n            $scope.clearUserIdSelect();\r\n            $scope.clearSystemSelect();\r\n            $scope.clearModuleSelect();\r\n            $scope.clearAliasSelect();\r\n            $scope.clearFunctionSelect();\r\n            $scope.search();\r\n        };\r\n\r\n        /**\r\n         * When the search button clicked\r\n         */\r\n        $scope.search = () => {\r\n            // Re-initialize the DataTables\r\n            let dataTablesSelector = angular.element('#tblServices');\r\n            dataTableUtils.reinitDataTables(dataTablesSelector, $scope.dataTableParms);\r\n            dataTableUtils.enableSingleSelect(dataTablesSelector);\r\n        };\r\n\r\n        $scope.deleteService = () => {\r\n            let table = $('#tblServices').DataTable();\r\n\r\n            if (table.row('.active').length === 1) {\r\n                if ($window.confirm($filter('translate')('pages.sm.service.SERVICE_MGMT_NOTIFICATIONS.SERVICE_MGMT_NOTIFICATION_DELETE_SERVICE_CONFIRMATION'))) {\r\n                    let data = table.row('.active').data();\r\n\r\n                    $http({\r\n                        method: 'POST',\r\n                        url   : CLB_FRONT_BASE_URL + 'svc/deleteSvcInfo',\r\n                        params: {\r\n                            'svcId'                          : data.svcId,\r\n                            'serviceRequiredVo.svcOperatorId': sessionStorage.getItem('userId')\r\n                        }\r\n                    }).then((response) => {\r\n                        if (response.data.flag === 'success') {\r\n                            toasterUtils.showSuccessToaster($filter('translate')('pages.sm.service.SERVICE_MGMT_ALERTS.SERVICE_MGMT_ALERT_SERVICE_DELETE_SUCCESSFUL'));\r\n                            dataTableUtils.reloadDataTable($('#tblServices'));\r\n                        } else {\r\n                            toasterUtils.showErrorToaster(response.data.message);\r\n                        }\r\n                    }, () => {\r\n                        toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n                    });\r\n                }\r\n            } else {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_SELECT_ROW'));\r\n            }\r\n        };\r\n\r\n        /**\r\n         * When the clear button clicked\r\n         */\r\n        $scope.clear = () => {\r\n            // Clear fields\r\n            $scope.fields.roleName = undefined;\r\n\r\n            $scope.clearSelect();\r\n            $scope.clearStatusSelect();\r\n\r\n            // Then re-perform the searching\r\n            $scope.search();\r\n        };\r\n\r\n        /**\r\n         * When the document is ready\r\n         */\r\n        angular.element(function () {\r\n            let dataTablesSelector = angular.element('#tblServices');\r\n            dataTableUtils.enableSingleSelect(dataTablesSelector, true, formatChildRow, undefined);\r\n            performInitAjaxes();\r\n        });\r\n    }\r\n}\r\n\r\nclass AccordionCtrl {\r\n    constructor($scope, $filter) {\r\n        // Only one Accordion can be opened at the same time\r\n        $scope.oneAtATime = true;\r\n\r\n        // Title of the Accordion\r\n        $scope.accordionTitle = $filter('translate')('pages.common.COMMON_FORM_TITLES.COMMON_FORM_TITLE_SEARCH');\r\n\r\n        // Initialize parameters for the Accordion\r\n        $scope.status = {\r\n            isFirstOpen    : false,\r\n            isFirstDisabled: false\r\n        };\r\n    }\r\n}\r\n\r\nclass DatePickerControl {\r\n    constructor($scope) {\r\n        $scope.today = function () {\r\n            $scope.dt = new Date().toISOString().slice(0, 10); // Pick the yyyy-MM-dd part\r\n        };\r\n        $scope.today();\r\n\r\n        $scope.clear = function () {\r\n            $scope.dt = null;\r\n        };\r\n\r\n        // Disable weekend selection\r\n        $scope.disabled = function (date, mode) {\r\n            return ( mode === 'day' && ( date.getDay() === 0 || date.getDay() === 6 ) );\r\n        };\r\n\r\n        $scope.toggleMin = function () {\r\n            $scope.minDate = $scope.minDate ? null : new Date();\r\n        };\r\n        $scope.toggleMin();\r\n\r\n        $scope.open = function ($event) {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n\r\n            $scope.opened = true;\r\n        };\r\n\r\n        $scope.dateOptions = {\r\n            formatYear : 'yyyy',\r\n            startingDay: 1,\r\n            showWeeks  : false,\r\n            class      : 'datepicker'\r\n        };\r\n\r\n        $scope.format = 'yyyy-MM-dd';\r\n    }\r\n}\r\n\r\napp.controller('SvcMgtControl', SvcMgtControl);\r\napp.controller('AccordionCtrl', AccordionCtrl);\r\napp.controller('DatePickerControl', DatePickerControl);"
  ]
}