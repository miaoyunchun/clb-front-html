{
  "version": 3,
  "sources": [
    "role_mgt_ctrl.es6"
  ],
  "names": [],
  "mappings": "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",
  "file": "role_mgt_ctrl.js",
  "sourcesContent": [
    "class RoleMgtControl {\r\n    constructor($scope, $http, $filter, shareDataService, dataTableUtils, toasterUtils) {\r\n\r\n        $scope.placeholders = shareDataService.role.getRolePlaceholders();\r\n\r\n        $scope.statuses = undefined;\r\n        $scope.organizations = undefined;\r\n        $scope.departments = undefined;\r\n        $scope.positions = undefined;\r\n\r\n        $scope.fields = {\r\n            roleName  : undefined,\r\n            roleActive: undefined,\r\n            orgId     : undefined,\r\n            depId     : undefined,\r\n            posId     : undefined\r\n        };\r\n\r\n        $scope.selectedStatus = {};\r\n        $scope.selectedOrg = {};\r\n        $scope.selectedDep = {};\r\n        $scope.selectedPos = {};\r\n\r\n        const COLUMN_NAMES = {\r\n            SEQ        : 0,\r\n            ROLE_ID    : 1,\r\n            ROLE_NAME  : 2,\r\n            CREATE_DATE: 3,\r\n            POS_ID     : 4,\r\n            POS_NAME   : 5,\r\n            DEP_ID     : 6,\r\n            DEP_NAME   : 7,\r\n            ORG_ID     : 8,\r\n            ORG_NAME   : 9,\r\n            STATUS_ID  : 10,\r\n            STATUS     : 11\r\n        };\r\n\r\n        // Initialization parameters for DataTable\r\n        $scope.dataTableParms = {\r\n            searching : false, // Disable built-in searching\r\n            serverSide: true, // Enables the server-side processing\r\n            processing: true, // Enables the \"Processing...\" indicator\r\n            autoWidth : false, // Disable column width auto determining\r\n            pagingType: 'full_numbers',ã€€// Paging buttons contains \"First\", \"Last\", \"Previous\", \"Next\", and numbers\r\n            language  : {\r\n                // I18n options, see https://datatables.net/reference/option/ for details\r\n                paginate    : {\r\n                    previous: $filter('translate')('pages.common.COMMON_BUTTONS.COMMON_BUTTON_PREV_PAGE'),\r\n                    next    : $filter('translate')('pages.common.COMMON_BUTTONS.COMMON_BUTTON_NEXT_PAGE'),\r\n                    first   : $filter('translate')('pages.common.COMMON_BUTTONS.COMMON_BUTTON_FIRST_PAGE'),\r\n                    last    : $filter('translate')('pages.common.COMMON_BUTTONS.COMMON_BUTTON_LAST_PAGE')\r\n                },\r\n                emptyTable  : $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_EMPTY_TABLE'),\r\n                info        : $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_PAGE_INFO'),\r\n                infoFiltered: $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_PAGE_INFO_FILTERED'),\r\n                infoEmpty   : $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_PAGE_EMPTY'),\r\n                lengthMenu  : $filter('translate')('pages.common.COMMON_FIELDS.COMMON_FIELD_LENGTH_MENU'),\r\n                processing  : $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_PROCESSING')\r\n            },\r\n            ajax      : {\r\n                url    : CLB_FRONT_BASE_URL + 'role/queryRoleWithFilter',\r\n                data   : $scope.fields,\r\n                dataSrc: 'data'\r\n            },\r\n            columns   : [\r\n                // Specify which property to pick for the corresponding column\r\n                {data: 'seq', visible: true},\r\n                {data: 'roleId', visible: false},\r\n                {data: 'roleName', visible: true},\r\n                {data: 'roleCreateTime', visible: true},\r\n                {data: 'posId', visible: false},\r\n                {data: 'posName', visible: true},\r\n                {data: 'depId', visible: false},\r\n                {data: 'depName', visible: true},\r\n                {data: 'orgId', visible: false},\r\n                {data: 'orgName', visible: true},\r\n                {data: 'roleActive', visible: false},\r\n                {data: 'roleActiveStatus', visible: true}\r\n            ],\r\n            order     : [[COLUMN_NAMES.ROLE_NAME, 'asc']]\r\n        };\r\n\r\n        /**\r\n         * Fetch organizations with position ID and department ID\r\n         * @param [posId=undefined] Position ID\r\n         * @param [depId=undefined] Department ID\r\n         */\r\n        function fetchOrganizations(posId = undefined, depId = undefined) {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryOrganizationName',\r\n                params: {\r\n                    'posId': posId,\r\n                    'depId': depId\r\n                }\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.organizations = responseData.organizationInfo;\r\n\r\n                    if (responseData.organizationInfo.length === 1) {\r\n                        $scope.selectedOrg.id = responseData.organizationInfo[0].orgId;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Fetch departments with given organization ID and position ID\r\n         * @param [orgId=undefined] Organization ID\r\n         * @param [posId=undefined] Position ID\r\n         */\r\n        function fetchDepartments(orgId = undefined, posId = undefined) {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryDepartmentName',\r\n                params: {\r\n                    'orgId': orgId,\r\n                    'posId': posId\r\n                }\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.departments = responseData.departmentInfo;\r\n\r\n                    if (responseData.departmentInfo.length === 1) {\r\n                        $scope.selectedDep.id = responseData.departmentInfo[0].depId;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Fetch positions with given organization ID and department ID\r\n         * @param [orgId=undefined] Organization ID\r\n         * @param [depId=undefined] Department ID\r\n         */\r\n        function fetchPositions(orgId = undefined, depId = undefined) {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryPositionName',\r\n                params: {\r\n                    'orgId': orgId,\r\n                    'depId': depId\r\n                }\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.positions = responseData.posInfo;\r\n\r\n                    if (responseData.posInfo.length === 1) {\r\n                        $scope.selectedPos.Id = responseData.posInfo[0].posId;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Fetch statuses and its ID\r\n         */\r\n        function fetchStatuses() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryActive'\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.statuses = responseData.active;\r\n\r\n                    if (responseData.active.length === 1) {\r\n                        $scope.selectedStatus.value = responseData.active[0].value;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Perform initialization AJAXes\r\n         */\r\n        function performInitAjaxes() {\r\n            fetchOrganizations();\r\n            fetchDepartments();\r\n            fetchPositions();\r\n            fetchStatuses();\r\n        }\r\n\r\n        /**\r\n         * When the status select box changed\r\n         */\r\n        $scope.activeStatusSelectChanged = () => {\r\n            $scope.fields.roleActive = $scope.selectedStatus.value;\r\n        };\r\n\r\n        /**\r\n         * When the organization select box changed\r\n         */\r\n        $scope.orgIdSelectOnChange = () => {\r\n            $scope.fields.orgId = $scope.selectedOrg.id;\r\n\r\n            fetchDepartments($scope.fields.orgId, $scope.fields.posId);\r\n            fetchPositions($scope.fields.orgId, $scope.fields.depId);\r\n        };\r\n\r\n        /**\r\n         * When the department select box changed\r\n         */\r\n        $scope.depIdSelectOnChange = () => {\r\n            $scope.fields.depId = $scope.selectedDep.id;\r\n\r\n            fetchOrganizations($scope.fields.posId, $scope.fields.depId);\r\n            fetchPositions($scope.fields.orgId, $scope.fields.depId);\r\n        };\r\n\r\n        /**\r\n         * When the position select box changed\r\n         */\r\n        $scope.posIdSelectOnChange = () => {\r\n            $scope.fields.posId = $scope.selectedPos.id;\r\n\r\n            fetchOrganizations($scope.fields.posId, $scope.fields.depId);\r\n            fetchDepartments($scope.fields.orgId, $scope.fields.posId);\r\n        };\r\n\r\n        /**\r\n         * When the clear button of the status select box clicked\r\n         */\r\n        $scope.clearStatusSelect = () => {\r\n            $scope.selectedStatus.value = undefined;\r\n            $scope.fields.roleActive = undefined;\r\n        };\r\n\r\n        /**\r\n         * When the clear button of the organization select box, the department select box and the position select box clicked\r\n         */\r\n        $scope.clearSelect = () => {\r\n            $scope.selectedOrg.id = undefined;\r\n            $scope.selectedDep.id = undefined;\r\n            $scope.selectedPos.id = undefined;\r\n\r\n            $scope.fields.orgId = undefined;\r\n            $scope.fields.depId = undefined;\r\n            $scope.fields.posId = undefined;\r\n\r\n            performInitAjaxes();\r\n        };\r\n\r\n        /**\r\n         * When the search button clicked\r\n         */\r\n        $scope.search = () => {\r\n            // Re-initialize the DataTables\r\n            let dataTablesSelector = angular.element('#tblRoles');\r\n            dataTableUtils.reinitDataTables(dataTablesSelector, $scope.dataTableParms);\r\n            dataTableUtils.enableSingleSelect(dataTablesSelector);\r\n        };\r\n\r\n        /**\r\n         * When the clear button clicked\r\n         */\r\n        $scope.clear = () => {\r\n            // Clear fields\r\n            $scope.fields.roleName = undefined;\r\n\r\n            $scope.clearSelect();\r\n            $scope.clearStatusSelect();\r\n\r\n            // Then re-perform the searching\r\n            $scope.search();\r\n        };\r\n\r\n        /**\r\n         * When the document is ready\r\n         */\r\n        angular.element(function () {\r\n            let dataTablesSelector = angular.element('#tblRoles');\r\n            dataTableUtils.enableSingleSelect(dataTablesSelector);\r\n            performInitAjaxes();\r\n        });\r\n    }\r\n}\r\n\r\nclass AccordionCtrl {\r\n    constructor($scope, $filter) {\r\n        // Only one Accordion can be opened at the same time\r\n        $scope.oneAtATime = true;\r\n\r\n        // Title of the Accordion\r\n        $scope.accordionTitle = $filter('translate')('pages.sm.role.ROLE_MGMT_FORM_TITLES.ROLE_MGMT_FORM_TITLE_SEARCH');\r\n\r\n        // Initialize parameters for the Accordion\r\n        $scope.status = {\r\n            isFirstOpen    : false,\r\n            isFirstDisabled: false\r\n        };\r\n    }\r\n}\r\n\r\napp.controller('RoleMgtControl', RoleMgtControl);\r\napp.controller('AccordionCtrl', AccordionCtrl);"
  ]
}