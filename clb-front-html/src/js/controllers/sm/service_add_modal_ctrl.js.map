{
  "version": 3,
  "sources": [
    "service_add_modal_ctrl.es6"
  ],
  "names": [],
  "mappings": "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",
  "file": "service_add_modal_ctrl.js",
  "sourcesContent": [
    "class ServiceAddModalControl {\r\n    constructor($scope, $modalInstance, $filter, $http, $timeout, shareDataService, dataTableUtils) {\r\n\r\n        const FIELD_TYPE_SELECT_BOX_ID = 4;\r\n        const DATA_TYPE_SELECT_BOX_ID = 5;\r\n\r\n        $scope.regexCharactersOnly = shareDataService.common.getCharactersOnlyRegex();\r\n\r\n        $scope.language = localStorage.getItem('NG_TRANSLATE_LANG_KEY');\r\n\r\n        $scope.organizations = undefined;\r\n        $scope.fieldTypes = undefined;\r\n        $scope.dataTypes = undefined;\r\n\r\n        $scope.selectedOrganization = {};\r\n        $scope.selectedFieldType = {};\r\n        $scope.selectedDataType = {};\r\n\r\n        $scope.svcName = undefined;\r\n\r\n        $scope.fields = {\r\n            svcSysName        : undefined,\r\n            svcModuleName     : undefined,\r\n            svcSysAlias       : undefined,\r\n            svcFunctionName   : undefined,\r\n            svcDescriptionZhCn: undefined,\r\n            svcDescriptionEn  : undefined,\r\n            orgId             : undefined,\r\n            svcOperatorId     : sessionStorage.getItem('userId')\r\n        };\r\n\r\n        $scope.svcFieldItem = {\r\n            svcName             : undefined,\r\n            fieldOrder          : undefined,\r\n            fieldName           : undefined,\r\n            fieldType           : undefined,\r\n            fieldLength         : 1,\r\n            fieldIOType         : undefined,\r\n            fieldIOTypeDes      : undefined,\r\n            fieldDescriptionZhCn: undefined,\r\n            fieldDescriptionEn  : undefined,\r\n            fieldOperatorId     : sessionStorage.getItem('userId'),\r\n            fieldOperations     : '<button class=\"btn m-b-xs btn-default btn-sm btn-danger btn-addon\">' + $filter('translate')('pages.common.COMMON_BUTTONS.COMMON_BUTTON_REMOVE') + '<i class=\"fa fa-minus\"></i></button>'\r\n        };\r\n\r\n        $scope.svcFieldItems = [];\r\n\r\n        $scope.alerts = [\r\n            // { type: 'danger', msg: '' }\r\n        ];\r\n\r\n        $scope.alertsInAddingFields = [];\r\n\r\n        $scope.isFormDisabled = false;\r\n\r\n        $scope.isTableHidden = true;\r\n\r\n        $scope.dataTableParms = {\r\n            searching   : false, // Disable built-in searching\r\n            serverSide  : false, // Enables the server-side processing\r\n            processing  : true, // Enables the \"Processing...\" indicator\r\n            autoWidth   : false, // Disable column width auto determining\r\n            pageLength  : -1, // Display all items\r\n            lengthChange: false, // Disable changing page length\r\n            paging      : false, // Disable paging\r\n            language    : {\r\n                // I18n options, see https://datatables.net/reference/option/ for details\r\n                emptyTable  : $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_EMPTY_TABLE'),\r\n                info        : $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_PAGE_INFO'),\r\n                infoFiltered: $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_PAGE_INFO_FILTERED'),\r\n                infoEmpty   : $filter('translate')('pages.common.COMMON_NOTIFICATION_TEXTS.COMMON_NOTIFICATION_PAGE_EMPTY')\r\n            },\r\n            data        : $scope.svcFieldItems,\r\n            columns     : [\r\n                {\r\n                    className     : 'details-control',\r\n                    orderable     : false,\r\n                    data          : null,\r\n                    defaultContent: ''\r\n                },\r\n                // Specify which property to pick for the corresponding column\r\n                {data: 'fieldOrder', visible: true},\r\n                {data: 'fieldName', visible: true},\r\n                {data: 'fieldType', visible: true},\r\n                {data: 'fieldIOType', visible: false},\r\n                {data: 'fieldIOTypeDes', visible: true},\r\n                {data: 'fieldLength', visible: true},\r\n                {data: 'fieldOperations', visible: true}\r\n            ],\r\n            order       : [[1, 'asc']], // Order by the index column ascending\r\n            rowReorder  : {\r\n                enable  : true, // Enable drag-and-drop re-ordering\r\n                update  : true, // Disable updating after re-ordered\r\n                selector: 'td:nth-child(2)', // Drag handler is on the 2nd column of the table\r\n                dataSrc : 'fieldOrder' // Update the index after re-ordering\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Generates the child row for the selected row\r\n         * @param data Data of the selected row\r\n         * @returns {string} The HTML of the child row\r\n         */\r\n        function formatChildRow(data) {\r\n            return '<div class=\"col-lg-6 form-group\">'\r\n                + '<h5>' + $filter('translate')('pages.sm.service.SERVICE_MGMT_COLUMN_TITLES.SERVICE_MGMT_COLUMN_TITLE_DESCRIPTION_ZH_CN') + '</h5>'\r\n                + '<div id=\"descZhCn\" class=\"well b bg-light lter wrapper-sm\">'\r\n                + data.fieldDescriptionZhCn\r\n                + '</div>'\r\n                + '</div>'\r\n                + '<div class=\"col-lg-6 form-group\">'\r\n                + '<h5>' + $filter('translate')('pages.sm.service.SERVICE_MGMT_COLUMN_TITLES.SERVICE_MGMT_COLUMN_TITLE_DESCRIPTION_EN') + '</h5>'\r\n                + '<div id=\"descEn\" class=\"well b bg-light lter wrapper-sm\">'\r\n                + data.fieldDescriptionEn\r\n                + '</div>'\r\n                + '</div>';\r\n        }\r\n\r\n        /**\r\n         * Alert when operation is successful\r\n         */\r\n        function addSuccessAlert() {\r\n            $scope.alerts.push({\r\n                type: 'success',\r\n                msg : $filter('translate')('pages.sm.service.SERVICE_MGMT_ALERTS.SERVICE_MGMT_ALERT_SERVICE_ADD_SUCCESSFUL')\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Adding red alert box\r\n         * @param {string} message The message\r\n         * @param {boolean} isInAddingFieldPanel Is this alert box for the adding field panel\r\n         */\r\n        function addFailAlert(message, isInAddingFieldPanel) {\r\n            if (isInAddingFieldPanel) {\r\n                $scope.alertsInAddingFields.push({\r\n                    type: 'danger',\r\n                    msg : message\r\n                });\r\n            } else {\r\n                $scope.alerts.push({\r\n                    type: 'danger',\r\n                    msg : message\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Close the alert\r\n         * @param index Index of the alert\r\n         * @param isInAddingFieldPanel Is this alert in the adding service panel\r\n         */\r\n        $scope.closeAlert = (index, isInAddingFieldPanel) => {\r\n            if (isInAddingFieldPanel) {\r\n                $scope.alertsInAddingFields.splice(index, 1);\r\n            } else {\r\n                $scope.alerts.splice(index, 1);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Check if the field being inserted is unique\r\n         * @param _fieldName Name of the field being inserted\r\n         * @returns {boolean} True if the field name is NOT unique, otherwise false\r\n         */\r\n        function chkIsFieldNameUnique(_fieldName) {\r\n            const DATA_TYPE_STRING = '1';\r\n            const DATA_TYPE_LIST = '2';\r\n\r\n            let data = $('#tblServiceFields').DataTable().rows().data();\r\n\r\n            for (let item in data) {\r\n                if (data.hasOwnProperty(item) && data[item].fieldType === DATA_TYPE_STRING && data[item].fieldName === _fieldName) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Fetch the list of organizations\r\n         */\r\n        function fetchOrganizations() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryOrganizationName'\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.organizations = responseData.organizationInfo;\r\n\r\n                    if (responseData.organizationInfo.length === 1) {\r\n                        $scope.selectedOrganization.orgId = responseData.organizationInfo[0].orgId;\r\n                    }\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Fetch the list of field types such as input field, output field, and I/O field\r\n         * @property responseData The data part of the response\r\n         * @property responseData.optValueList[] Items inside the specified option\r\n         * @property responseData.optValueList[].key Key of the option item\r\n         * @property responseData.optValueList[].value Value of the option\r\n         */\r\n        function fetchFieldTypes() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryOptValueWithFilter',\r\n                params: {\r\n                    optId: FIELD_TYPE_SELECT_BOX_ID\r\n                }\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.fieldTypes = responseData.optValueList;\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Fetch the list of data types, like STRING or LIST\r\n         */\r\n        function fetchDataTypes() {\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'select/queryOptValueWithFilter',\r\n                params: {\r\n                    optId: DATA_TYPE_SELECT_BOX_ID\r\n                }\r\n            }).then((response) => {\r\n                let responseData = response.data;\r\n\r\n                if (responseData.flag === 'success') {\r\n                    $scope.dataTypes = responseData.optValueList;\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Perform the initialization AJAXes\r\n         */\r\n        function performInitAjaxes() {\r\n            fetchOrganizations();\r\n            fetchFieldTypes();\r\n            fetchDataTypes();\r\n        }\r\n\r\n        /**\r\n         * Add a service. If success, add fields then\r\n         */\r\n        $scope.performAddService = () => {\r\n            $scope.alertsInAddingFields = [];\r\n            $scope.isFormDisabled = true;\r\n\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'svc/addNewServiceInfo',\r\n                params: {\r\n                    'serviceRequiredVo.svcSysName'        : $scope.fields.svcSysName,\r\n                    'serviceRequiredVo.svcModuleName'     : $scope.fields.svcModuleName,\r\n                    'serviceRequiredVo.svcSysAlias'       : $scope.fields.svcSysAlias,\r\n                    'serviceRequiredVo.svcFunctionName'   : $scope.fields.svcFunctionName,\r\n                    'serviceRequiredVo.svcDescriptionZhCn': $scope.fields.svcDescriptionZhCn,\r\n                    'serviceRequiredVo.svcDescriptionEn'  : $scope.fields.svcDescriptionEn,\r\n                    'serviceRequiredVo.orgId'             : $scope.fields.orgId,\r\n                    'serviceRequiredVo.svcOperatorId'     : $scope.fields.svcOperatorId\r\n                }\r\n            }).then((response) => {\r\n                if (response.data.flag === 'success') {\r\n                    return $scope.performAddServiceFields();\r\n                } else {\r\n                    $scope.isFormDisabled = false;\r\n\r\n                    let message = '';\r\n                    if ($scope.language === 'zh_CN') {\r\n                        message = response.data.messageZhCn;\r\n                    } else if ($scope.language === 'en') {\r\n                        message = response.data.messageEn;\r\n                    }\r\n\r\n                    addFailAlert(message ? message : $filter('translate')('pages.sm.service.SERVICE_MGMT_ALERTS.SERVICE_MGMT_ALERT_SERVICE_ADD_FAILED'), true);\r\n                }\r\n            }, () => {\r\n                toasterUtils.showErrorToaster($filter('translate')('pages.common.COMMON_TOAST_TEXTS.COMMON_TOAST_TEXT_NETWORK_FAILED'));\r\n                return false;\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Add fields\r\n         */\r\n        $scope.performAddServiceFields = () => {\r\n            let jsonStr = JSON.stringify($scope.svcFieldItems);\r\n\r\n            $http({\r\n                method: 'POST',\r\n                url   : CLB_FRONT_BASE_URL + 'svc/addNewFieldsWithBatch',\r\n                params: {\r\n                    svcName   : [$scope.fields.svcSysName, $scope.fields.svcModuleName, $scope.fields.svcSysAlias, $scope.fields.svcFunctionName].join('.'),\r\n                    fieldsJson: jsonStr\r\n                }\r\n            }).then((response) => {\r\n                if (response.data.flag === 'success') {\r\n                    addSuccessAlert();\r\n\r\n                    $scope.isFormDisabled = true;\r\n\r\n                    dataTableUtils.reloadDataTable($('#tblService'));\r\n\r\n                    $timeout(function () {\r\n                        $modalInstance.dismiss('cancel');\r\n                    }, 2000);\r\n                } else {\r\n                    $scope.isFormDisabled = false;\r\n\r\n                    let message = '';\r\n                    if ($scope.language === 'zh_CN') {\r\n                        message = response.data.messageZhCn;\r\n                    } else if ($scope.language === 'en') {\r\n                        message = response.data.messageEn;\r\n                    }\r\n\r\n                    addFailAlert(message ? message : $filter('translate')('pages.sm.service.SERVICE_MGMT_ALERTS.SERVICE_MGMT_ALERT_SERVICE_ADD_FAILED'), true);\r\n                }\r\n            }, () => {\r\n                return false;\r\n            });\r\n        };\r\n\r\n        /**\r\n         * When the organization select box changed\r\n         */\r\n        $scope.orgSelectOnChange = () => {\r\n            $scope.fields.orgId = $scope.selectedOrganization.orgId;\r\n        };\r\n\r\n        /**\r\n         * When the field type select box changed\r\n         */\r\n        $scope.fieldTypeSelectOnChange = () => {\r\n            $scope.svcFieldItem.fieldIOType = $scope.selectedFieldType.item.key;\r\n            $scope.svcFieldItem.fieldIOTypeDes = $scope.selectedFieldType.item.value;\r\n        };\r\n\r\n        /**\r\n         * When the data type select box changed\r\n         */\r\n        $scope.dataTypeSelectOnChange = () => {\r\n            $scope.svcFieldItem.fieldType = $scope.selectedDataType.item.value;\r\n        };\r\n\r\n        // $scope.addService = () => {\r\n        //     if (performAddService()) {\r\n        //         addSuccessAlert();\r\n        //     } else {\r\n        //         addFailAlert($filter('translate')('pages.sm.service.SERVICE_MGMT_ALERTS.SERVICE_MGMT_ALERT_SERVICE_ADD_FAILED'), true);\r\n        //     }\r\n        // };\r\n\r\n        /**\r\n         * When the add field button clicked\r\n         * @param form The form of adding fields\r\n         */\r\n        $scope.addField = (form) => {\r\n            let dataTableSelector = $('#tblServiceFields');\r\n            let dataTable = dataTableSelector.DataTable();\r\n\r\n            $scope.alertsInAddingFields = [];\r\n\r\n            if (chkIsFieldNameUnique($scope.svcFieldItem.fieldName)) {\r\n                addFailAlert($filter('translate')('pages.sm.service.SERVICE_MGMT_ALERTS.SERVICE_MGMT_ALERT_DUPLICATE_FIELD_NAME'), true);\r\n                return;\r\n            }\r\n\r\n            $scope.svcFieldItem.fieldOrder = dataTableUtils.getLastIndex(angular.element('#tblServiceFields')) + 1;\r\n\r\n            $scope.svcFieldItems.push(Object.assign({}, $scope.svcFieldItem));\r\n\r\n            // Clear fields after successsfully inserted\r\n            $scope.svcFieldItem.fieldOrder = undefined;\r\n            $scope.svcFieldItem.fieldName = undefined;\r\n            $scope.svcFieldItem.fieldType = undefined;\r\n            $scope.svcFieldItem.fieldLength = 1;\r\n            $scope.svcFieldItem.fieldIOType = undefined;\r\n            $scope.svcFieldItem.fieldIOTypeDes = undefined;\r\n            $scope.svcFieldItem.fieldDescriptionZhCn = undefined;\r\n            $scope.svcFieldItem.fieldDescriptionEn = undefined;\r\n            $scope.selectedFieldType = {};\r\n            $scope.selectedDataType = {};\r\n\r\n            // Then reset its validation state\r\n            form.$setPristine();\r\n            form.$setValidity();\r\n\r\n            angular.element('#tblServiceFields').DataTable().clear().rows.add($scope.svcFieldItems).draw();\r\n\r\n            dataTableSelector.find('tr').find('td.details-control').removeClass('details-control').addClass('fa fa-plus');\r\n\r\n            let tbody = dataTableSelector.find('tbody');\r\n\r\n            // Cancel all listeners before binding any\r\n            tbody.off();\r\n\r\n            // Bind click listener on the delete button\r\n            tbody.on('click', 'button', function () {\r\n                let data = dataTable.row($(this).parents('tr')).data();\r\n\r\n                if ($scope.svcFieldItems.length > 1) {\r\n                    $scope.svcFieldItems.splice(data.fieldOrder, 1);\r\n                } else {\r\n                    $scope.svcFieldItems = [];\r\n                }\r\n\r\n                dataTable.clear().rows.add($scope.svcFieldItems).draw();\r\n            });\r\n\r\n            // Bind click listener on the details button\r\n            tbody.on('click', 'td.fa', function () {\r\n                let td = $(this).closest('td');\r\n                let tr = td.closest('tr');\r\n                let row = dataTable.row(tr);\r\n\r\n                if (row.child.isShown()) {\r\n                    row.child.hide();\r\n                    td.removeClass('fa-minus').addClass('fa-plus');\r\n                } else {\r\n                    row.child(formatChildRow(row.data())).show();\r\n                    td.removeClass('fa-plus').addClass('fa-minus');\r\n                }\r\n            });\r\n        };\r\n\r\n        // Close modal\r\n        $scope.cancel = () => {\r\n            $modalInstance.dismiss('cancel');\r\n        };\r\n\r\n        angular.element(() => {\r\n            performInitAjaxes();\r\n\r\n            let dataTable = angular.element('#tblServiceFields');\r\n            dataTableUtils.enableIndexColumn(dataTable);\r\n        });\r\n    }\r\n}\r\n\r\nclass AddServiceModalInstanceCtrl {\r\n    constructor($scope, $modal) {\r\n        $scope.showAddServicePopup = () => {\r\n            $modal.open({\r\n                backdrop   : 'static',\r\n                templateUrl: 'addServiceModal.html',\r\n                controller : 'ServiceAddModalControl',\r\n                size       : 'lg'\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\napp.controller('AddServiceModalInstanceCtrl', AddServiceModalInstanceCtrl);\r\napp.controller('ServiceAddModalControl', ServiceAddModalControl);"
  ]
}